@using GitTime.Web.Models.View.Issue

@model ViewerModel

@{
    var isCommentsTabActive = Model.View.ActiveTab == "comments" && Model.View.Comments.Length > 0;
    var isHoursTabActive = Model.View.ActiveTab == "hours";
    var isInfoTabActive = !isCommentsTabActive && !isHoursTabActive || Model.View.ActiveTab == "info";
}

@functions {
    IHtmlString GetHtml(String text)
    {
        if (String.IsNullOrEmpty(text))
            return null;

        var html = text.Replace("\r", String.Empty).Replace("\n", "<br/>");

        return Html.Raw(html);
    }
}

<!-- Modal -->
<div class="modal fade" id="Editor" tabindex="-1" role="dialog" aria-labelledby="EditorTitle" data-backdrop="false" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="EditorTitle">@String.Format("Issue #{0:0000}", Model.View.Number)</h4>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs">
                    <li @(isInfoTabActive ? Html.Raw("class='active'") : null)><a data-toggle="tab" href="#issue_viewer_info">Details</a></li>
                    @if (Model.View.Comments.Length > 0)
                    {
                        <li @(isCommentsTabActive ? Html.Raw("class='active'") : null)><a data-toggle="tab" href="#issue_viewer_comments">Comments</a></li>
                    }
                    <li @(isHoursTabActive ? Html.Raw("class='active'") : null)><a data-toggle="tab" href="#issue_viewer_hours">Timecards</a></li>
                </ul>
                <div class="tab-content" style="padding:16px 8px;">
                    <div id="issue_viewer_info" class="tab-pane fade in@(isInfoTabActive ? " active" : null)">
                        <h4>@Model.View.Title</h4>
                        @GetHtml(Model.View.BodyText)
                    </div>
                    @if (Model.View.Comments.Length > 0)
                    {
                        <div id="issue_viewer_comments" class="tab-pane fade in@(isCommentsTabActive ? " active" : null)">
                            <h4>Comments</h4>

                            <ul class="media-list">
                                @foreach (var comment in Model.View.Comments)
                                {
                                    var commentTimestamp = comment.UpdatedOn ?? comment.CreatedOn;
                                    
                                    <li class="media">
                                        <div class="media-left">
                                            <a target="_blank" href="@comment.Author.ProfileUrl">
                                                <img class="media-object" src="@comment.Author.AvatarUrl" alt="" title="@comment.Author.LoginName" style="width:32px; height:32px;">
                                            </a>
                                        </div>
                                        <div class="media-body">
                                            <h5 class="media-heading">@String.Format("{0:MMM d, yyyy} at {0:HH:mm tt}", commentTimestamp)</h5>
                                            @GetHtml(comment.BodyText)
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    <div id="issue_viewer_hours" class="tab-pane fade in@(isHoursTabActive ? " active" : null)">
                        @Html.Partial("IssueTimecards", Model)
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var issueViewer = {
        deleteTimecard: function (id) {
            if (!confirm("Are you sure you want to delete this timecard?"))
                return;

            var form = $("form#issue_timecard_form");

            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteTimecard")',
                data: form.serialize() + '&Timecard.ID=' + String(id),
                success: function (data) {
                    issueViewer._initTimecards(data);
                    issueController._refreshSearchResults = true;
                },
                error: function (xhr) {
                    if (xhr.responseText.indexOf("<!DOCTYPE") == 0) {
                        var newDoc = document.open("text/html", "replace");
                        newDoc.write(xhr.responseText);
                        newDoc.close();
                    }
                    else {
                        issueViewer._initTimecards(xhr.responseText);
                        $('#issue_viewer_hours form .alert-danger').show();
                    }
                },
            });
        },
        saveTimecard: function () {
            var form = $("form#issue_timecard_form");
            form.validate();

            if (!form.valid()) {
                form.children(".alert-danger").show();
                return;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateTimecard")',
                data: form.serialize(),
                success: function (data) {
                    issueViewer._initTimecards(data);
                    issueController._refreshSearchResults = true;
                },
                error: function (xhr) {
                    if (xhr.responseText.indexOf("<!DOCTYPE") == 0) {
                        var newDoc = document.open("text/html", "replace");
                        newDoc.write(xhr.responseText);
                        newDoc.close();
                    }
                    else {
                        issueViewer._initTimecards(xhr.responseText);
                        $('#issue_viewer_hours form .alert-danger').show();
                    }
                },
            });
        },

        _initTimecards: function (data) {
            $('#issue_viewer_hours').html(data);
            $('form#issue_timecard_form').find("input[type='date']").datepicker({ changeMonth: true, changeYear: true });
            $.validator.unobtrusive.parse("form#issue_timecard_form");
        },
    };

</script>
