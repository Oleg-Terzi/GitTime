@using GitTime.Web.Models.View.Issue

@model FinderModel

@{
    ViewBag.Title = "Issues";
}

@section Scripts
{
    @Html.Partial("_Find")
}

@section SearchCriteria
{
    <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Search <span class="caret"></span></a>
        <ul class="dropdown-menu">
            <li>
                <div id="SearchCriteria" class="search-criteria">
                    @using (Html.BeginForm(null, null, null, FormMethod.Post, new { role = "form" }))
                    {
                        <div class="form-group">
                            @Html.ProjectRepositorySelectorFor(x => x.SearchCriteria.RepositoryName, new { @class = "form-control input-sm" }, false)
                        </div>
                        
                        <div class="form-group">
                            @Html.DropDownListFor(x => x.SearchCriteria.StatusName, new SelectList(new String[] { "Open", "Closed" }), "Issue Status...", new { @class = "form-control input-sm" })
                        </div>

                        <div class="form-group buttons">
                            <button name="action" value="search" type="button" class="btn btn-primary btn-sm" onclick="_finder.search(false);">Search</button>
                            <button name="action" value="clear" type="button" class="btn btn-default btn-sm" onclick="_finder.search(true);">Clear</button>
                        </div>
                    }
                </div>
            </li>
        </ul>
    </li>
}

<h1 class="page-header">Issues</h1>

<div id="SearchResultsPlaceholder">
    @Html.Partial("SearchResults")
</div>

<div class="loading-modal">
</div>

<script type="text/javascript">
        
    var issueController = {
        showViewer: function (id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("ViewIssue")',
                data: { id: id },
                success: function (data) {
                    _finder._init(data);
                },
                error: function (xhr) {
                    var newDoc = document.open("text/html", "replace");
                    newDoc.write(xhr.responseText);
                    newDoc.close();
                },
            });
        },
    };

</script>
