@using GitTime.Web.Models.Database;
@using GitTime.Web.Models.View.Person

@model FinderModel

@{
    var _errorMessage = (string)ViewBag.ErrorMessage;
    List<Role> roles = ViewBag.Roles;
}

<!-- Modal -->
<div class="modal fade" id="Editor" tabindex="-1" role="dialog" aria-labelledby="EditorTitle" data-backdrop="false" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="EditorTitle">
                    @(Model.Edit.ID.HasValue ? "Edit Person" : "New Person")
                </h4>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm("Edit", null, null, FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
                {
                    <div class="alert alert-danger" role="alert" style="display:none;">
                        @if (_errorMessage != null)
                        {
                            @(_errorMessage)
                        }
                        else
                        {
                            @("Make sure all fields have valid values.")
                        }
                    </div>

                    @Html.HiddenFor(x => x.Edit.ID)

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Label("Email", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(x => x.Edit.Email, new { @class = "form-control" })
                                    @{ Html.ValidateFor(x => x.Edit.Email); }
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("First Name", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(x => x.Edit.FirstName, new { @class = "form-control" })
                                    @{ Html.ValidateFor(x => x.Edit.FirstName); }
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Last Name", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(x => x.Edit.LastName, new { @class = "form-control" })
                                    @{ Html.ValidateFor(x => x.Edit.LastName); }
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Password", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(x => x.Edit.Password, new { @class = "form-control" })
                                    @{ Html.ValidateFor(x => x.Edit.Password); }
                                </div>
                            </div>

                            @if (roles != null)
                            {
                                <div class="form-group">
                                    @Html.Label("Roles", new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @foreach (Role r in roles)
                                        {
                                            <div class="checkbox">
                                                <label><input type="checkbox" name="Edit.Roles" value="@r.ID"
                                                              @(Model.Edit.Roles.Contains(r.ID) ? "checked='checked'" : String.Empty)> @r.Name</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="_finder.save();">Save</button>
            </div>
        </div>
    </div>
</div>